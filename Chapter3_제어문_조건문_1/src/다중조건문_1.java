/*
 * start			if(조건문)
 * 	|					{
 * 변수 선언       조건문이 true인 상태에서만 수행되는문장
 * 	|					}
 * 조건	false-------------		*단일조건문*
 * 	|					 |
 * 문장실행				 |
 * |true------------------
 * end
 * 
 * 				start			
 * 				   |					
 * 				변수 선언       
 * 				   |					
 *  	true---	조건	false---------		간단하게 삼항연산자
 * 			|					 |
 * 		문장실행				 문장실행	
 * 			|					|
 * 			--------end---------			{
 * 											true 일떄 수행
 * 											}
 * 											else
 * 											{
 * 											false일때 수행
 * 												}
 * 
 * start			
 * 	|					
 * 변수 선언      
 * 	|					
 * 조건	false--------------다른조건---------false--다른조건------false----------문장수행		
 * 	|true					 	|true				|true						|
 * 문장실행				 	문장실행	 			 문장실행							|
 * 	|--------------------------|-------------------|----------------------------|		
 * 										|	
 * 									  end
 * 
 * if(조건문)
 * 문장수행=> 종료
 * 	  |
 * else if(조건문)
 * 문장수행	=>종료
 * 	 |
 * else if(조건문)
 * 문장수행
 * else if(조건문)
 * 문장수행
 * else=맞는 조건이 없는
 * 경우=> 생략이가능
 * 
 * 선택문 switch~ case
 * 반복문 => for
 * 연산자 ==> 제어문 => 배열,클래스
 * 					------모아서관리
 * 		데이터저장---------------------------------데이터처리------------------요청결과출력
 * 													|							|
 * 정수/실수/문자/문자열/논리 							|							|
 * 한개저장:변수/상수								사용자 요청					application
 * 관련된 데이터 여러개: 배열(같은 데이터형만 저장이가능)	=>결과값을 추철			web application
 * 클래스(다른 데이터형을 모아서 관리)					=>연산처리/제어(흐름)
 * 												=>연산자/제어문---메소드
 * -----------------------------------------------------------------------------------	
 * 	|
 * 전체를 묶어서 component: 클래스안에서 제작 => 재사용 목적 /변경,추가:객체지향:최종목적 => 유지보수
 * ---------------------------------------------------------------------------------------
 * 
 * 		다중 조건문 :조건이 맞는 문장을 수행하고 종료 (한개 문장만 수행)
 * 					=> 여러개를 수행: 단일 조건문을 사용해야 된다
 * 		예) 1~100까지 숫자중 3의 배수, 5의배수, 7의배수의 합을 출력한다 (단일 조건문)
 * 						  ---------------------- 단일 조건문 3개 사용		
 * 							15
 * 다중조건문의 형식)
 * 				if(조건문)
 * 				{
 * 					true일때 수행하는 문장 작성 ==> 종료
 * 					false
 * 					 ↓
 * 				}
 * 				else if(조건문)
 * 				{
 * 					true일때 수행하는 문장 작성 ==> 종료
 * 					false
 * 					 ↓
 * 				}
 * 				else ==> 생략이가능
 * 				{
 * 					해당 조건이 없는 경우에 처리되는 문장
 * 				}
 * 				
 * 				사칙연산 (+,-,*,/)  ==>%(else)
 * 
 * 				if()
 * 				{
 * 				}
 * 				----------
 * 				if() 짝
 * 				{
 * 				}
 * 				else 짝 맨위의 if와는 관련이 없음
 * 				{
 * 				}
 * 				----------
 * 
 */
// 사칙연산 처리
import java.util.Scanner;
public class 다중조건문_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan=new Scanner(System.in);
		System.out.println("첫번째 정수 입력:");
		int num1=scan.nextInt();
		System.out.println("두번째 정수 입력:");
		int num2=scan.nextInt();
		System.out.println("연산자 입력(+, -, *, /):");
		char op=scan.next().charAt(0); // 문자열중에 첫번째에 있는 문자를 추출
		//	+-*/ => charAt(1) => 자바의 단점 : char는 받을 수 없다(문자열)
		// 경우 + , -, *, / , 다른 문자 입력시 (else)
		if(op=='+')
		{
			System.out.printf("%d+%d=%d\n",num1,num2,num1+num2);
		}
		else if(op=='-')
		{
			System.out.printf("%d-%d=%d\n",num1,num2,num1-num2);
		}
		else if(op=='*')
		{
			System.out.printf("%d*%d=%d\n",num1,num2,num1*num2);
		}
		else if(op=='/')
		{
			if(num2==0)
				System.out.println("0으로 나눌 수 없다");
			else
				System.out.printf("%d/%d=%.2f\n",num1,num2,num1/(double)num2);
		}
		else
		{
			System.out.println("잘못된 입력");
		}
	}
	

}
